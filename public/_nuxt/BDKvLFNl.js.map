{"version":3,"file":"BDKvLFNl.js","sources":["../../../../stores/authStore.ts"],"sourcesContent":["import type { User } from \"~/app/misc/types\";\r\nimport { skipHydrate } from \"pinia\";\r\n\r\nexport const useAuthStore = defineStore(\r\n  \"auth\",\r\n  () => {\r\n    const users = ref(<User | null>null);\r\n    const isLoggedIn = ref(false);\r\n    const updateCount = ref(0);\r\n    const registrationEmail = ref(\"\");\r\n\r\n    const setUser = (user: User) => {\r\n      users.value = user;\r\n    };\r\n    const getUser = computed(() => {\r\n      return users.value;\r\n    });\r\n    const removeUser = () => {\r\n      users.value = null;\r\n    };\r\n    const setIsLoggedIn = (value: boolean) => {\r\n      isLoggedIn.value = value;\r\n    };\r\n    const setUpdateCount = () => {\r\n      updateCount.value++;\r\n    };\r\n    const setRegisterEmail = (value: string) => {\r\n      registrationEmail.value = value;\r\n    };\r\n    const removeRegisterEmail = () => {\r\n      registrationEmail.value = \"\";\r\n    };\r\n    const checkLoggedIn = async () => {\r\n      const { isAuthenticated } = useCheckout();\r\n      const isLogin = await isAuthenticated();\r\n      if (!isLogin) {\r\n        removeUser();\r\n        setIsLoggedIn(false);\r\n        await logMeOut();\r\n      }\r\n    };\r\n    const logMeOut = async () => {\r\n      const { logout } = useCheckout();\r\n      const { status } = await logout();\r\n      if (status === \"success\") {\r\n        removeUser();\r\n        setIsLoggedIn(false);\r\n        return navigateTo(\"/\");\r\n      }\r\n    };\r\n    return {\r\n      users: skipHydrate(users),\r\n      isLoggedIn,\r\n      updateCount,\r\n      registrationEmail,\r\n      setUser,\r\n      getUser,\r\n      removeUser,\r\n      setIsLoggedIn,\r\n      setUpdateCount,\r\n      setRegisterEmail,\r\n      removeRegisterEmail,\r\n      checkLoggedIn,\r\n      logMeOut,\r\n    };\r\n  },\r\n  {\r\n    persist: {\r\n      storage: piniaPluginPersistedstate.localStorage(),\r\n    },\r\n  }\r\n);\r\n"],"names":["useAuthStore","defineStore","users","ref","isLoggedIn","updateCount","registrationEmail","setUser","user","getUser","computed","removeUser","setIsLoggedIn","value","setUpdateCount","setRegisterEmail","removeRegisterEmail","checkLoggedIn","isAuthenticated","useCheckout","logMeOut","logout","status","navigateTo","skipHydrate","piniaPluginPersistedstate"],"mappings":"oIAGO,MAAMA,EAAeC,EAC1B,OACA,IAAM,CACE,MAAAC,EAAQC,EAAiB,IAAI,EAC7BC,EAAaD,EAAI,EAAK,EACtBE,EAAcF,EAAI,CAAC,EACnBG,EAAoBH,EAAI,EAAE,EAE1BI,EAAWC,GAAe,CAC9BN,EAAM,MAAQM,CAAA,EAEVC,EAAUC,EAAS,IAChBR,EAAM,KACd,EACKS,EAAa,IAAM,CACvBT,EAAM,MAAQ,IAAA,EAEVU,EAAiBC,GAAmB,CACxCT,EAAW,MAAQS,CAAA,EAEfC,EAAiB,IAAM,CACfT,EAAA,OAAA,EAERU,EAAoBF,GAAkB,CAC1CP,EAAkB,MAAQO,CAAA,EAEtBG,EAAsB,IAAM,CAChCV,EAAkB,MAAQ,EAAA,EAEtBW,EAAgB,SAAY,CAC1B,KAAA,CAAE,gBAAAC,GAAoBC,IACZ,MAAMD,MAETP,IACXC,EAAc,EAAK,EACnB,MAAMQ,EAAS,EACjB,EAEIA,EAAW,SAAY,CACrB,KAAA,CAAE,OAAAC,GAAWF,IACb,CAAE,OAAAG,CAAA,EAAW,MAAMD,IACzB,GAAIC,IAAW,UACF,OAAAX,IACXC,EAAc,EAAK,EACZW,EAAW,GAAG,CACvB,EAEK,MAAA,CACL,MAAOC,EAAYtB,CAAK,EACxB,WAAAE,EACA,YAAAC,EACA,kBAAAC,EACA,QAAAC,EACA,QAAAE,EACA,WAAAE,EACA,cAAAC,EACA,eAAAE,EACA,iBAAAC,EACA,oBAAAC,EACA,cAAAC,EACA,SAAAG,CAAA,CAEJ,EACA,CACE,QAAS,CACP,QAASK,EAA0B,aAAa,CAClD,CACF,CACF"}