{"version":3,"file":"ztEtAieQ.js","sources":["../../../../pages/auth/verify-email.vue"],"sourcesContent":["<template>\r\n  <div\r\n    class=\"relative mx-5 py-5 px-4 border border-gray-400 dark:border-gray-700\"\r\n  >\r\n    <AlertMessageBox\r\n      v-if=\"resetError\"\r\n      theme=\"danger\"\r\n      :message=\"resetError.message\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nconst route = useRoute();\r\nconst { verifyEmailToken } = useCheckout();\r\n\r\nconst resetError = ref(<Error | null>null);\r\n\r\ndefinePageMeta({\r\n  layout: \"auth\",\r\n  middleware: \"auth\",\r\n});\r\nuseHead({\r\n  title: \"Verify Email\",\r\n});\r\n\r\n// Get token from url parameters\r\nconst token = route.query.token as string;\r\nif (!token) navigateTo(\"/auth/verify-failed\");\r\n\r\ntry {\r\n  const { data, error } = await verifyEmailToken(token);\r\n  // If verification fails, navigate to a verify failed page\r\n  if (error) navigateTo(\"/auth/verify-failed\");\r\n  // If successful, navigate to login page\r\n  if (data) navigateTo(`/auth/login?email_verify=true`);\r\n} catch (e) {\r\n  // If other error, like a server error occurs, show generic error message\r\n  // console.log(e)\r\n  resetError.value = {} as Error;\r\n  resetError.value.message = \"Error. Please contact an administrator.\";\r\n}\r\n</script>\r\n\r\n<style scoped></style>\r\n"],"names":["route","useRoute","verifyEmailToken","useCheckout","resetError","ref","useHead","token","navigateTo","data","error","__temp","__restore","_withAsyncContext"],"mappings":"uWAaA,MAAMA,EAAQC,IACR,CAAE,iBAAAC,GAAqBC,IAEvBC,EAAaC,EAAkB,IAAI,EAMjCC,EAAA,CACN,MAAO,cAAA,CACR,EAGK,MAAAC,EAAQP,EAAM,MAAM,MACrBO,GAAOC,EAAW,qBAAqB,EAExC,GAAA,CACF,KAAM,CAAE,KAAAC,EAAM,MAAAC,IAAgB,CAAAC,EAAAC,CAAA,EAAAC,EAAA,IAAAX,EAAiBK,CAAK,CAAA,mBAEhDG,KAAkB,qBAAqB,EAEvCD,KAAiB,+BAA+B,OAC1C,CAGVL,EAAW,MAAQ,GACnBA,EAAW,MAAM,QAAU,yCAC7B"}