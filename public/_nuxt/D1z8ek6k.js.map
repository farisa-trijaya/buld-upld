{"version":3,"file":"D1z8ek6k.js","sources":["../../../../composables/useCheckout.ts"],"sourcesContent":["import type { ChangePassword, JSONResponse } from \"~/app/misc/types\";\r\nimport type { User, Transaction } from \"~/utils/products\";\r\n\r\nexport default function useCheckout() {\r\n  return {\r\n    createTransaction,\r\n    verifyEmailToken,\r\n    isAuthenticated,\r\n    login,\r\n    logout,\r\n    updateProfile,\r\n    getProfile,\r\n    refresh,\r\n    deleteAccount,\r\n    resetPassword,\r\n    verifyReset,\r\n    verifyEmail,\r\n    getTransactionByOrderID,\r\n    getAllTransactionUser,\r\n    uploadAvatar,\r\n    changePassword,\r\n  };\r\n}\r\nasync function createTransaction(\r\n  user: User,\r\n  transaction: Transaction\r\n): Promise<JSONResponse> {\r\n  const response = await $fetch(\"/api/transaction/create\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"client-platform\": \"browser\",\r\n    },\r\n    body: { user, transaction },\r\n  });\r\n  return response;\r\n}\r\nasync function verifyEmailToken(token: string): Promise<JSONResponse> {\r\n  const response = await $fetch(\"/api/auth/verify-email-token\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"client-platform\": \"browser\",\r\n    },\r\n    body: {\r\n      token: token,\r\n    },\r\n  });\r\n  return response;\r\n}\r\nasync function isAuthenticated(): Promise<boolean> {\r\n  // Api response always has status, data, or error\r\n  const { status } = await $fetch(\"/api/auth/is-authenticated\", {\r\n    headers: {\r\n      \"client-platform\": \"browser\",\r\n    },\r\n  });\r\n  // If status is success, then user is authenticated, and return true, otherwise return false\r\n  return status === \"success\";\r\n}\r\nasync function login(email: string, password: string): Promise<JSONResponse> {\r\n  const response = await $fetch(\"/api/auth/login\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"client-platform\": \"browser\",\r\n    },\r\n    body: {\r\n      email,\r\n      password,\r\n    },\r\n  });\r\n\r\n  return response;\r\n}\r\nasync function logout(): Promise<JSONResponse> {\r\n  const response = await $fetch(\"/api/auth/logout\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"client-platform\": \"browser\",\r\n    },\r\n  });\r\n\r\n  return response;\r\n}\r\nasync function updateProfile(user: User): Promise<JSONResponse> {\r\n  const response = await $fetch(\"/api/auth/update\", {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"client-platform\": \"browser\",\r\n    },\r\n    body: user,\r\n  });\r\n\r\n  return response;\r\n}\r\nasync function getProfile(): Promise<JSONResponse> {\r\n  const response = await $fetch(\"/api/auth/profile\", {\r\n    headers: {\r\n      \"client-platform\": \"browser\",\r\n    },\r\n  });\r\n\r\n  return response;\r\n}\r\nasync function refresh(): Promise<JSONResponse> {\r\n  const response = await $fetch(\"/api/auth/refresh\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"client-platform\": \"browser\",\r\n    },\r\n  });\r\n\r\n  return response;\r\n}\r\nasync function deleteAccount(\r\n  uuid: string,\r\n  csrfToken: string\r\n): Promise<JSONResponse> {\r\n  const response = await $fetch(\"/api/auth/delete\", {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"client-platform\": \"browser\",\r\n    },\r\n    body: {\r\n      uuid: uuid,\r\n      csrf_token: csrfToken,\r\n    },\r\n  });\r\n\r\n  return response;\r\n}\r\nasync function resetPassword(email: string): Promise<JSONResponse> {\r\n  const response = await $fetch(\"/api/auth/reset\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"client-platform\": \"browser\",\r\n    },\r\n    body: {\r\n      email: email,\r\n    },\r\n  });\r\n\r\n  return response;\r\n}\r\nasync function verifyReset(token: string): Promise<JSONResponse> {\r\n  const response = await $fetch(\"/api/auth/verify-reset\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"client-platform\": \"browser\",\r\n    },\r\n    body: {\r\n      token: token,\r\n    },\r\n  });\r\n\r\n  return response;\r\n}\r\nasync function verifyEmail(email: string): Promise<JSONResponse> {\r\n  const response = await $fetch(\"/api/auth/verify-email\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"client-platform\": \"browser\",\r\n    },\r\n    body: {\r\n      email: email,\r\n    },\r\n  });\r\n  return response;\r\n}\r\nasync function getTransactionByOrderID(orderID: string): Promise<JSONResponse> {\r\n  const response = await $fetch(`/api/transaction/${orderID}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"client-platform\": \"browser\",\r\n    },\r\n  });\r\n  return response;\r\n}\r\nasync function getAllTransactionUser(): Promise<JSONResponse> {\r\n  const response = await $fetch(\"/api/transaction/user-all\", {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"client-platform\": \"browser\",\r\n    },\r\n  });\r\n  return response;\r\n}\r\nasync function uploadAvatar(file: File): Promise<JSONResponse> {\r\n  // console.log(file);\r\n  const body = new FormData();\r\n  body.append(\"file\", file, file.name);\r\n\r\n  const response = await $fetch(\"/api/users/upload-avatar\", {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"client-platform\": \"browser\",\r\n    },\r\n    body: body,\r\n  });\r\n  return response;\r\n}\r\nasync function changePassword(data: ChangePassword): Promise<JSONResponse> {\r\n  const response = await $fetch(\"/api/users/change-password\", {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"client-platform\": \"browser\",\r\n    },\r\n    body: data,\r\n  });\r\n  return response;\r\n}\r\n"],"names":["useCheckout","createTransaction","verifyEmailToken","isAuthenticated","login","logout","updateProfile","getProfile","refresh","deleteAccount","resetPassword","verifyReset","verifyEmail","getTransactionByOrderID","getAllTransactionUser","uploadAvatar","changePassword","user","transaction","token","status","email","password","uuid","csrfToken","orderID","file","body","data"],"mappings":"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"}