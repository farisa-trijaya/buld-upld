{"version":3,"file":"BdKTiowi.js","sources":["../../../../pages/auth/login.vue"],"sourcesContent":["<template>\r\n  <div\r\n    class=\"relative mx-5 py-5 px-4 border border-gray-400 dark:border-gray-700\"\r\n  >\r\n    <AlertMessageBox\r\n      v-if=\"loginError\"\r\n      theme=\"danger\"\r\n      :message=\"loginError.message\"\r\n      :show-close=\"true\"\r\n      @close-message=\"loginError = null\"\r\n    />\r\n    <AlertMessageBox\r\n      v-if=\"getProfileError\"\r\n      theme=\"danger\"\r\n      :message=\"getProfileError.message\"\r\n      :show-close=\"true\"\r\n      @close-message=\"getProfileError = null\"\r\n    />\r\n    <AlertMessageBox\r\n      v-if=\"loginSuccess\"\r\n      theme=\"success\"\r\n      message=\"Success Login\"\r\n      :show-close=\"true\"\r\n      @close-message=\"loginSuccess = false\"\r\n    />\r\n\r\n    <h1 class=\"text-xl text-gray-50 font-bold\">Sign In</h1>\r\n    <form @submit.prevent=\"onSubmit\">\r\n      <div class=\"relative space-y-1 mt-2\">\r\n        <label for=\"email\" class=\"text-sm text-gray-50 font-semibold\"\r\n          >Email Address *</label\r\n        >\r\n        <input\r\n          type=\"text\"\r\n          name=\"email\"\r\n          v-model=\"email\"\r\n          class=\"inline-flex w-full h-10 text-sm text-gray-900 dark:text-gray-50 px-3 border border-gray-300 dark:border-gray-500 bg-white dark:bg-gray-700 hover:outline-none focus:ring-0 focus:outline-none hover:ring-0 rounded-sm\"\r\n          required\r\n        />\r\n        <div\r\n          v-if=\"emailError\"\r\n          class=\"text-xs text-red-500 italic mt-1 font-semibold\"\r\n        >\r\n          {{ emailError }}\r\n        </div>\r\n      </div>\r\n      <div class=\"relative space-y-1 mt-2\">\r\n        <label for=\"password\" class=\"text-sm text-gray-50 font-semibold\"\r\n          >Password *</label\r\n        >\r\n        <input\r\n          :type=\"typePassword\"\r\n          name=\"password\"\r\n          v-model=\"password\"\r\n          class=\"inline-flex w-full h-10 text-sm text-gray-900 dark:text-gray-50 px-3 border border-gray-300 dark:border-gray-500 bg-white dark:bg-gray-700 hover:outline-none focus:ring-0 focus:outline-none hover:ring-0 rounded-sm\"\r\n        />\r\n        <ClientOnly>\r\n          <Icon\r\n            :name=\"\r\n              typePassword === 'password'\r\n                ? 'ic:outline-remove-red-eye'\r\n                : 'mdi:eye-off-outline'\r\n            \"\r\n            class=\"absolute top-8 right-2 h-6 w-6 cursor-pointer text-gray-900 dark:text-gray-50\"\r\n            @click=\"togglePassword\"\r\n          />\r\n        </ClientOnly>\r\n        <div\r\n          v-if=\"passwordError\"\r\n          class=\"text-xs text-red-500 italic mt-1 font-semibold\"\r\n        >\r\n          {{ passwordError }}\r\n        </div>\r\n      </div>\r\n      <button\r\n        class=\"inline-flex w-full items-center justify-center py-2 bg-orange-600 hover:bg-orange-500 text-sm text-gray-50 font-semibold rounded-sm mt-5\"\r\n      >\r\n        SIgn In\r\n      </button>\r\n      <div class=\"flex items-center justify-center gap-2 mt-2\">\r\n        <input type=\"checkbox\" />\r\n        <label for=\"remember\" class=\"text-sm text-gray-200\">Remember Me</label>\r\n      </div>\r\n    </form>\r\n    <div class=\"flex items-center justify-center gap-2 mt-2\">\r\n      <NuxtLink to=\"/auth/forgot\">\r\n        <p\r\n          class=\"text-sm font-semibold text-orange-500 hover:underline cursor-pointer\"\r\n        >\r\n          Forgot your password?\r\n        </p>\r\n      </NuxtLink>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport * as Yup from \"yup\";\r\nimport type { User } from \"~/app/misc/types\";\r\n\r\ndefinePageMeta({\r\n  layout: \"auth\",\r\n  middleware: \"auth\",\r\n});\r\n\r\nconst themeStore = useThemeSettings();\r\nconst authStore = useAuthStore();\r\nconst config = useRuntimeConfig();\r\nconst typePassword = ref(\"password\");\r\nconst regexPattern = new RegExp(\"true\");\r\n\r\nconst loginError = ref(<Error | null>null);\r\nconst loginSuccess = ref(false);\r\n\r\nconst { login, getProfile } = useCheckout();\r\n\r\nconst getProfileError = ref(<Error | null>null);\r\n// User profile\r\nconst profile = ref(<User>{});\r\n// Check email verification\r\nconst emailIsVerified = ref(false);\r\n\r\nonNuxtReady(() => {\r\n  themeStore.disableBottomNav();\r\n  themeStore.closeCollapseMenu();\r\n});\r\nuseHead({\r\n  title: \"Login\",\r\n});\r\n\r\nconst scheme = Yup.object().shape({\r\n  email: Yup.string().email().required(\"Email Required\"),\r\n  password: Yup.string()\r\n    .required(\"Password Required\")\r\n    .matches(/^(\\S+$)/g, \"Columns are not allowed to contain spaces\"),\r\n});\r\n\r\nconst { handleSubmit } = useForm({\r\n  validationSchema: scheme,\r\n});\r\n\r\nconst { value: email, errorMessage: emailError } = useField(\"email\");\r\nconst { value: password, errorMessage: passwordError } = useField(\"password\");\r\n\r\nconst onSubmit = handleSubmit(async (value) => {\r\n  const { email, password } = value;\r\n  await loginUser(email, password);\r\n});\r\n\r\nasync function loginUser(email: string, password: string) {\r\n  const { status, error } = await login(email, password);\r\n  if (status === \"fail\") {\r\n    loginError.value = error;\r\n    // console.error(error);\r\n    if (error.message === \"account is not verified\") {\r\n      authStore.setRegisterEmail(email);\r\n      setTimeout(() => {\r\n        navigateTo(\"/auth/verify-registration\");\r\n      }, 1000);\r\n    }\r\n    return;\r\n  }\r\n  if (status === \"success\") await loginSuccessful();\r\n}\r\nasync function loginSuccessful() {\r\n  const { status, error, data } = await getProfile();\r\n  if (error) {\r\n    console.log(\"error: \", error);\r\n    getProfileError.value = error;\r\n    return;\r\n  }\r\n\r\n  if (status === \"success\" && data) {\r\n    profile.value = data as User;\r\n    // Check email verification status\r\n    emailIsVerified.value = data.email_verified;\r\n    // Store user profile\r\n    authStore.setUser(profile.value);\r\n    authStore.setIsLoggedIn(true);\r\n    authStore.setUpdateCount();\r\n\r\n    loginSuccess.value = true;\r\n    setTimeout(() => {\r\n      navigateTo(\"/\");\r\n    }, 300);\r\n  }\r\n}\r\nfunction togglePassword() {\r\n  if (typePassword.value === \"password\") {\r\n    typePassword.value = \"text\";\r\n  } else {\r\n    typePassword.value = \"password\";\r\n  }\r\n}\r\n</script>\r\n"],"names":["themeStore","useThemeSettings","authStore","useAuthStore","typePassword","ref","loginError","loginSuccess","login","getProfile","useCheckout","getProfileError","profile","emailIsVerified","onNuxtReady","useHead","scheme","Yup.object","Yup.string","handleSubmit","useForm","email","emailError","useField","password","passwordError","onSubmit","value","loginUser","status","error","navigateTo","loginSuccessful","data","togglePassword"],"mappings":"42BAyGA,MAAMA,EAAaC,KACbC,EAAYC,KAEZC,EAAeC,EAAI,UAAU,EAG7BC,EAAaD,EAAkB,IAAI,EACnCE,EAAeF,EAAI,EAAK,EAExB,CAAE,MAAAG,EAAO,WAAAC,CAAW,EAAIC,GAAY,EAEpCC,EAAkBN,EAAkB,IAAI,EAExCO,EAAUP,EAAU,CAAA,CAAE,EAEtBQ,EAAkBR,EAAI,EAAK,EAEjCS,EAAY,IAAM,CAChBd,EAAW,iBAAiB,EAC5BA,EAAW,kBAAkB,CAAA,CAC9B,EACOe,EAAA,CACN,MAAO,OAAA,CACR,EAED,MAAMC,EAASC,EAAW,EAAE,MAAM,CAChC,MAAOC,IAAa,MAAM,EAAE,SAAS,gBAAgB,EACrD,SAAUA,EAAW,EAClB,SAAS,mBAAmB,EAC5B,QAAQ,WAAY,2CAA2C,CAAA,CACnE,EAEK,CAAE,aAAAC,CAAa,EAAIC,EAAQ,CAC/B,iBAAkBJ,CAAA,CACnB,EAEK,CAAE,MAAOK,EAAO,aAAcC,GAAeC,EAAS,OAAO,EAC7D,CAAE,MAAOC,EAAU,aAAcC,GAAkBF,EAAS,UAAU,EAEtEG,EAAWP,EAAa,MAAOQ,GAAU,CAC7C,KAAM,CAAE,MAAAN,EAAO,SAAAG,GAAaG,EACtB,MAAAC,EAAUP,EAAOG,CAAQ,CAAA,CAChC,EAEc,eAAAI,EAAUP,EAAeG,EAAkB,CACxD,KAAM,CAAE,OAAAK,EAAQ,MAAAC,GAAU,MAAMtB,EAAMa,EAAOG,CAAQ,EACrD,GAAIK,IAAW,OAAQ,CACrBvB,EAAW,MAAQwB,EAEfA,EAAM,UAAY,4BACpB5B,EAAU,iBAAiBmB,CAAK,EAChC,WAAW,IAAM,CACfU,EAAW,2BAA2B,GACrC,GAAI,GAET,MACF,CACIF,IAAW,WAAW,MAAMG,GAClC,CACA,eAAeA,GAAkB,CAC/B,KAAM,CAAE,OAAAH,EAAQ,MAAAC,EAAO,KAAAG,CAAK,EAAI,MAAMxB,EAAW,EACjD,GAAIqB,EAAO,CACD,QAAA,IAAI,UAAWA,CAAK,EAC5BnB,EAAgB,MAAQmB,EACxB,MACF,CAEID,IAAW,WAAaI,IAC1BrB,EAAQ,MAAQqB,EAEhBpB,EAAgB,MAAQoB,EAAK,eAEnB/B,EAAA,QAAQU,EAAQ,KAAK,EAC/BV,EAAU,cAAc,EAAI,EAC5BA,EAAU,eAAe,EAEzBK,EAAa,MAAQ,GACrB,WAAW,IAAM,CACfwB,EAAW,GAAG,GACb,GAAG,EAEV,CACA,SAASG,GAAiB,CACpB9B,EAAa,QAAU,WACzBA,EAAa,MAAQ,OAErBA,EAAa,MAAQ,UAEzB"}